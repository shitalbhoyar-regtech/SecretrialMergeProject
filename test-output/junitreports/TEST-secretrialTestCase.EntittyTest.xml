<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="TRPL-PUN-0115" failures="0" tests="341" name="secretrialTestCase.EntittyTest" time="128.376" errors="3" timestamp="2024-12-24T13:07:03 IST" skipped="337">
  <testcase classname="secretrialTestCase.EntittyTest" name="browserClosing" time="18.073">
    <error message="disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=131.0.6778.140)
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0115&#039;, ip: &#039;192.168.176.1&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53290}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0e3b6fd1b993303886e2aca7b8e1514" type="org.openqa.selenium.WebDriverException">
      <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=131.0.6778.140)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '192.168.176.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53290}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0e3b6fd1b993303886e2aca7b8e1514
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:442)
at secretrialTestCase.EntittyTest.browserClosing(EntittyTest.java:4924)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- browserClosing -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DownloadAnnualReport" time="58.862">
    <error message="Expected condition failed: waiting for visibility of element located by By.xpath: //*[@id=&#039;Mastermenu&#039;]/a/img (tried for 40 second(s) with 500 milliseconds interval)" type="org.openqa.selenium.TimeoutException">
      <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //*[@id='Mastermenu']/a/img (tried for 40 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at secretrial.Methods.DownloadAnnualReport(Methods.java:2138)
at secretrialTestCase.EntittyTest.DownloadAnnualReport(EntittyTest.java:591)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='Mastermenu']/a/img"}
  (Session info: chrome=131.0.6778.140)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '192.168.176.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53182}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c73f0a550f98a111958369b54494d20b
*** Element info: {Using=xpath, value=//*[@id='Mastermenu']/a/img}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 28 more
]]>
    </error>
  </testcase> <!-- DownloadAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="BusinessActivityClick" time="40.657"/>
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="AddNew" time="10.766">
    <error message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=131.0.6778.140)
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0115&#039;, ip: &#039;192.168.176.1&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53290}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0e3b6fd1b993303886e2aca7b8e1514
*** Element info: {Using=xpath, value=//*[@id=&#039;filterSearch&#039;]}" type="org.openqa.selenium.NoSuchWindowException">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=131.0.6778.140)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '192.168.176.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Users\snehalp\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53290}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0e3b6fd1b993303886e2aca7b8e1514
*** Element info: {Using=xpath, value=//*[@id='filterSearch']}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at CompnaySecretory.EntityLocator.ClickFilter(EntityLocator.java:248)
at secretrial.Methods.BusinessActivity(Methods.java:76)
at secretrialTestCase.EntittyTest.AddNew(EntittyTest.java:112)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="validationofedit" time="0.000">
    <skipped/>
  </testcase> <!-- validationofedit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DeleteBusinessActivity" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteBusinessActivity -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="BusinessActivityValidation" time="0.000">
    <skipped/>
  </testcase> <!-- BusinessActivityValidation -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentClick" time="0.001">
    <skipped/>
  </testcase> <!-- DocumentClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDMOA" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="WithoutDocument" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutDocument -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDMOAAE" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDMOAAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ViewMOA" time="0.000">
    <skipped/>
  </testcase> <!-- ViewMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DownloadMOA" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DeleteMOA" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="AddNewDocuments" time="0.000">
    <skipped/>
  </testcase> <!-- AddNewDocuments -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDExisting" time="0.001">
    <skipped/>
  </testcase> <!-- DocumentsADDExisting -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ViewAOA" time="0.000">
    <skipped/>
  </testcase> <!-- ViewAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DownloadAOA" time="0.001">
    <skipped/>
  </testcase> <!-- DownloadAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentDelete" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentDelete -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="WithoutDocumentAOA" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutDocumentAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDCOI" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="WithoutDocumentCOI" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutDocumentCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDCOIExisting" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDCOIExisting -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ViewCOI" time="0.000">
    <skipped/>
  </testcase> <!-- ViewCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DownloadCOI" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DeleteCOI" time="0.001">
    <skipped/>
  </testcase> <!-- DeleteCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="WithoutDocumentPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutDocumentPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDPolicyAE" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDPolicyAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DownloadPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DeletePolicy" time="0.000">
    <skipped/>
  </testcase> <!-- DeletePolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="WithoutDocumentLicense" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutDocumentLicense -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDLicenseRegiED" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDLicenseRegiED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DownloadLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DeleteLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDAnnualReportED" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDAnnualReportED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DocumentsADDAnnualReportWD" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentsADDAnnualReportWD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedSelect" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedSelect -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedAdd" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedAdd -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedAddInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedAddInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedAddWith2man" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedAddWith2man -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedAddWithoutdata" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedAddWithoutdata -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedAddClose" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedAddClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedEdit" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedEditInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedEditInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PublicLimitedEditClose" time="0.000">
    <skipped/>
  </testcase> <!-- PublicLimitedEditClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBusinessActivityClick" time="0.000">
    <skipped/>
  </testcase> <!-- PLBusinessActivityClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBusinessActivity" time="0.001">
    <skipped/>
  </testcase> <!-- PLBusinessActivity -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBusinessActivityValidation" time="0.000">
    <skipped/>
  </testcase> <!-- PLBusinessActivityValidation -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLvalidationofedit" time="0.000">
    <skipped/>
  </testcase> <!-- PLvalidationofedit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLCheckInvaliddata" time="0.000">
    <skipped/>
  </testcase> <!-- PLCheckInvaliddata -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDeleteBusinessActivity" time="0.000">
    <skipped/>
  </testcase> <!-- PLDeleteBusinessActivity -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBusinessActivityADDNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- PLBusinessActivityADDNewClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentClick" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDMOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLWithoutDocument" time="0.000">
    <skipped/>
  </testcase> <!-- PLWithoutDocument -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDMOAAE" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDMOAAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLViewMOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLViewMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDownloadMOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLDownloadMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDeleteMOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLDeleteMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADD" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLWithoutDocumentAOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLWithoutDocumentAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDExisting" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDExisting -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLViewAOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLViewAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDeleteAOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLDeleteAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDownloadAOA" time="0.000">
    <skipped/>
  </testcase> <!-- PLDownloadAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDCOI" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLWithoutDocumentCOI" time="0.000">
    <skipped/>
  </testcase> <!-- PLWithoutDocumentCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDCOIExisting" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDCOIExisting -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLViewCOI" time="0.000">
    <skipped/>
  </testcase> <!-- PLViewCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDownloadCOI" time="0.000">
    <skipped/>
  </testcase> <!-- PLDownloadCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDeleteCOI" time="0.000">
    <skipped/>
  </testcase> <!-- PLDeleteCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLWithoutDocumentPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- PLWithoutDocumentPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDPolicyAE" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDPolicyAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDownloadPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- PLDownloadPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDeletePolicy" time="0.000">
    <skipped/>
  </testcase> <!-- PLDeletePolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLWithoutDocumentLicense" time="0.000">
    <skipped/>
  </testcase> <!-- PLWithoutDocumentLicense -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDLicenseRegiED" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDLicenseRegiED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDownloadLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- PLDownloadLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PlDeleteLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- PlDeleteLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDAnnualReport" time="0.001">
    <skipped/>
  </testcase> <!-- PLDocumentsADDAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDocumentsADDAnnualReportED" time="0.000">
    <skipped/>
  </testcase> <!-- PLDocumentsADDAnnualReportED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PlDocumentsADDAnnualReportWD" time="0.000">
    <skipped/>
  </testcase> <!-- PlDocumentsADDAnnualReportWD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDownloadAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- PLDownloadAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLDeleteAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- PLDeleteAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBranchDetailsClick" time="0.000">
    <skipped/>
  </testcase> <!-- PLBranchDetailsClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLAddNewBranchDetails" time="0.000">
    <skipped/>
  </testcase> <!-- PLAddNewBranchDetails -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLAddNewBranchDetailsinvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- PLAddNewBranchDetailsinvalidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLAddNewBranchDetailsMandatoryfield" time="0.000">
    <skipped/>
  </testcase> <!-- PLAddNewBranchDetailsMandatoryfield -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLAddNewBranchDetailsWithOutData" time="0.000">
    <skipped/>
  </testcase> <!-- PLAddNewBranchDetailsWithOutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLUploadBranchDetails" time="0.000">
    <skipped/>
  </testcase> <!-- PLUploadBranchDetails -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLUploadBranchDetailsInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- PLUploadBranchDetailsInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLUploadBranchDetailsMulvalid" time="0.000">
    <skipped/>
  </testcase> <!-- PLUploadBranchDetailsMulvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLUploadBranchDetailsMulInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- PLUploadBranchDetailsMulInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLUploadBranchDetailsWF" time="0.000">
    <skipped/>
  </testcase> <!-- PLUploadBranchDetailsWF -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLAddNewBranchDetailsClose" time="0.000">
    <skipped/>
  </testcase> <!-- PLAddNewBranchDetailsClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBankDetailsClick" time="0.000">
    <skipped/>
  </testcase> <!-- PLBankDetailsClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBankDetailAddnew" time="0.000">
    <skipped/>
  </testcase> <!-- PLBankDetailAddnew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBankDetailEdit" time="0.000">
    <skipped/>
  </testcase> <!-- PLBankDetailEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBankDetailDeleteCan" time="0.000">
    <skipped/>
  </testcase> <!-- PLBankDetailDeleteCan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="PLBankDetailDelete" time="0.001">
    <skipped/>
  </testcase> <!-- PLBankDetailDelete -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanySelect" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanySelect -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyAdd" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyAdd -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyAddInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyAddInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyAddWith2man" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyAddWith2man -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyAddWithoutdata" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyAddWithoutdata -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyAddClose" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyAddClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyEdit" time="0.001">
    <skipped/>
  </testcase> <!-- ListedCompanyEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyEditInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyEditInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ListedCompanyEditClose" time="0.000">
    <skipped/>
  </testcase> <!-- ListedCompanyEditClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBusinessActivityClick" time="0.000">
    <skipped/>
  </testcase> <!-- LCBusinessActivityClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBusinessActivity" time="0.000">
    <skipped/>
  </testcase> <!-- LCBusinessActivity -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBusinessActivityValidation" time="0.001">
    <skipped/>
  </testcase> <!-- LCBusinessActivityValidation -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCvalidationofedit" time="0.000">
    <skipped/>
  </testcase> <!-- LCvalidationofedit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDeleteBusinessActivity" time="0.000">
    <skipped/>
  </testcase> <!-- LCDeleteBusinessActivity -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBusinessActivityADDNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- LCBusinessActivityADDNewClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentClick" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDMOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCWithoutDocument" time="0.000">
    <skipped/>
  </testcase> <!-- LCWithoutDocument -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDMOAAE" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDMOAAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCViewMOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCViewMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDownloadMOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCDownloadMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDeleteMOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCDeleteMOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADD" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCWithoutDocumentAOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCWithoutDocumentAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDExisting" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDExisting -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCViewAOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCViewAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDownloadAOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCDownloadAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDeleteAOA" time="0.000">
    <skipped/>
  </testcase> <!-- LCDeleteAOA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDCOI" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCWithoutDocumentCOI" time="0.000">
    <skipped/>
  </testcase> <!-- LCWithoutDocumentCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDCOIExisting" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDCOIExisting -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCViewCOI" time="0.000">
    <skipped/>
  </testcase> <!-- LCViewCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDownloadCOI" time="0.000">
    <skipped/>
  </testcase> <!-- LCDownloadCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDeleteCOI" time="0.000">
    <skipped/>
  </testcase> <!-- LCDeleteCOI -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCWithoutDocumentPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- LCWithoutDocumentPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDPolicyAE" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDPolicyAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCViewPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- LCViewPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDownloadPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- LCDownloadPolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDeletePolicy" time="0.000">
    <skipped/>
  </testcase> <!-- LCDeletePolicy -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCWithoutDocumentLicense" time="0.000">
    <skipped/>
  </testcase> <!-- LCWithoutDocumentLicense -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDLicenseRegiED" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDLicenseRegiED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDownloadLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- LCDownloadLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="lCDeleteLicenseRegi" time="0.000">
    <skipped/>
  </testcase> <!-- lCDeleteLicenseRegi -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDocumentsADDAnnualReportED" time="0.000">
    <skipped/>
  </testcase> <!-- LCDocumentsADDAnnualReportED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="lCDocumentsADDAnnualReportWD" time="0.000">
    <skipped/>
  </testcase> <!-- lCDocumentsADDAnnualReportWD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDownloadAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- LCDownloadAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCDeleteAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- LCDeleteAnnualReport -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBranchDetailsClick" time="0.000">
    <skipped/>
  </testcase> <!-- LCBranchDetailsClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCAddNewBranchDetails" time="0.000">
    <skipped/>
  </testcase> <!-- LCAddNewBranchDetails -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCAddNewBranchDetailsinvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- LCAddNewBranchDetailsinvalidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCAddNewBranchDetailsMandatoryfield" time="0.000">
    <skipped/>
  </testcase> <!-- LCAddNewBranchDetailsMandatoryfield -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCAddNewBranchDetailsWithOutData" time="0.000">
    <skipped/>
  </testcase> <!-- LCAddNewBranchDetailsWithOutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCUploadBranchDetails" time="0.000">
    <skipped/>
  </testcase> <!-- LCUploadBranchDetails -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCUploadBranchDetailsInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- LCUploadBranchDetailsInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCUploadBranchDetailsMulvalid" time="0.000">
    <skipped/>
  </testcase> <!-- LCUploadBranchDetailsMulvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCUploadBranchDetailsWF" time="0.000">
    <skipped/>
  </testcase> <!-- LCUploadBranchDetailsWF -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCAddNewBranchDetailsClose" time="0.000">
    <skipped/>
  </testcase> <!-- LCAddNewBranchDetailsClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBankDetailsClick" time="0.000">
    <skipped/>
  </testcase> <!-- LCBankDetailsClick -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBankDetailAddnew" time="0.000">
    <skipped/>
  </testcase> <!-- LCBankDetailAddnew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBankDetailEdit" time="0.000">
    <skipped/>
  </testcase> <!-- LCBankDetailEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBankDetailDeleteCan" time="0.000">
    <skipped/>
  </testcase> <!-- LCBankDetailDeleteCan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="LCBankDetailDelete" time="0.000">
    <skipped/>
  </testcase> <!-- LCBankDetailDelete -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="EntityMoreOption" time="0.000">
    <skipped/>
  </testcase> <!-- EntityMoreOption -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="RCAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- RCAddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="RCSharesHeld" time="0.000">
    <skipped/>
  </testcase> <!-- RCSharesHeld -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="RCClose" time="0.000">
    <skipped/>
  </testcase> <!-- RCClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="RCSearchField" time="0.000">
    <skipped/>
  </testcase> <!-- RCSearchField -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="RCDelete" time="0.000">
    <skipped/>
  </testcase> <!-- RCDelete -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="EntityMoreOption1" time="0.000">
    <skipped/>
  </testcase> <!-- EntityMoreOption1 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="Capital" time="0.000">
    <skipped/>
  </testcase> <!-- Capital -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="Shareholding" time="0.000">
    <skipped/>
  </testcase> <!-- Shareholding -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DebentureHolding" time="0.000">
    <skipped/>
  </testcase> <!-- DebentureHolding -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DebentureHoldingSearch" time="0.000">
    <skipped/>
  </testcase> <!-- DebentureHoldingSearch -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DebentureHoldingSearchInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- DebentureHoldingSearchInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClassAllDS" time="0.000">
    <skipped/>
  </testcase> <!-- ClassAllDS -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClassAllNCD" time="0.000">
    <skipped/>
  </testcase> <!-- ClassAllNCD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClassAllPCD" time="0.001">
    <skipped/>
  </testcase> <!-- ClassAllPCD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClassAllFCD" time="0.000">
    <skipped/>
  </testcase> <!-- ClassAllFCD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClearFilter" time="0.000">
    <skipped/>
  </testcase> <!-- ClearFilter -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="AddNewDH" time="0.000">
    <skipped/>
  </testcase> <!-- AddNewDH -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="AddNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- AddNewClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHD" time="0.000">
    <skipped/>
  </testcase> <!-- DHD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- DHDAddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDAddNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- DHDAddNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDAddNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- DHDAddNewClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDUpload" time="0.000">
    <skipped/>
  </testcase> <!-- DHDUpload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDUploadED" time="0.000">
    <skipped/>
  </testcase> <!-- DHDUploadED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDUploadInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- DHDUploadInvalidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDUploadEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- DHDUploadEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDUploadInvalidEx" time="0.000">
    <skipped/>
  </testcase> <!-- DHDUploadInvalidEx -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDUploadwithoutFile" time="0.000">
    <skipped/>
  </testcase> <!-- DHDUploadwithoutFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHUpload" time="0.000">
    <skipped/>
  </testcase> <!-- DHUpload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHUploadInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- DHUploadInvalidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHUploadED" time="0.000">
    <skipped/>
  </testcase> <!-- DHUploadED -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHUploadEmptyFile" time="0.000">
    <skipped/>
  </testcase> <!-- DHUploadEmptyFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHUploadinvalidExten" time="0.000">
    <skipped/>
  </testcase> <!-- DHUploadinvalidExten -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHUploadWithOutFile" time="0.000">
    <skipped/>
  </testcase> <!-- DHUploadWithOutFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHMaster" time="0.000">
    <skipped/>
  </testcase> <!-- DHMaster -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHEdit" time="0.000">
    <skipped/>
  </testcase> <!-- DHEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHEditE" time="0.000">
    <skipped/>
  </testcase> <!-- DHEditE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHEditClose" time="0.000">
    <skipped/>
  </testcase> <!-- DHEditClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDelete" time="0.000">
    <skipped/>
  </testcase> <!-- DHDelete -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDeleteCan" time="0.000">
    <skipped/>
  </testcase> <!-- DHDeleteCan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="DHDAddNewInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- DHDAddNewInvalidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SecretarialAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- SecretarialAuditor -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SAAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SAAddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SAAddNewAE" time="0.000">
    <skipped/>
  </testcase> <!-- SAAddNewAE -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SAAddNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- SAAddNewClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SAClearFilter" time="0.000">
    <skipped/>
  </testcase> <!-- SAClearFilter -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SAEditClose" time="0.000">
    <skipped/>
  </testcase> <!-- SAEditClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ResignationofAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditor -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ResignationofAuditorClose" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditorClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="CostAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- CostAuditor -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="CostAuditorAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- CostAuditorAddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="CAAddNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- CAAddNewClose -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="CAClearFilter" time="0.000">
    <skipped/>
  </testcase> <!-- CAClearFilter -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ResignationofAuditorEmptyCA" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditorEmptyCA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ResignationofAuditorCloseCA" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditorCloseCA -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="StatutoryRegisters" time="0.001">
    <skipped/>
  </testcase> <!-- StatutoryRegisters -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSIT" time="0.001">
    <skipped/>
  </testcase> <!-- SRDEPOSIT -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITAddnew" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITAddnew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITAddnewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITAddnewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITUpload" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITUpload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITUploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITUploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITUploadEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITUploadEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITUploadInvalidEx" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITUploadInvalidEx -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITDwonGR" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITDwonGR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRDEPOSITEdit" time="0.000">
    <skipped/>
  </testcase> <!-- SRDEPOSITEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2AddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2AddNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2AddNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2Upload" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2Upload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2UploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2UploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2UploadEmptyFile" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2UploadEmptyFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH2UploadInValidEx" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH2UploadInValidEx -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSh2DwonGR" time="0.000">
    <skipped/>
  </testcase> <!-- SRSh2DwonGR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSh2Edit" time="0.000">
    <skipped/>
  </testcase> <!-- SRSh2Edit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3AddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3AddNewInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3AddNewInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3AddNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3AddNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3Upload" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3Upload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3UploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3UploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3UploadWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3UploadWithoutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3UploadInValidEx" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3UploadInValidEx -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSh3DwonGR" time="0.000">
    <skipped/>
  </testcase> <!-- SRSh3DwonGR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3Edit" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3Edit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH3EditInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH3EditInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH6 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6AddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH6AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6AddNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH6AddNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6Upload" time="0.001">
    <skipped/>
  </testcase> <!-- SRSH6Upload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6UploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH6UploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6UploadInValidEx" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH6UploadInValidEx -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSh6DwonGR" time="0.000">
    <skipped/>
  </testcase> <!-- SRSh6DwonGR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRSH6Edit" time="0.000">
    <skipped/>
  </testcase> <!-- SRSH6Edit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7AddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7AddnewTwoman" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7AddnewTwoman -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7AddnewEmptyFields" time="0.001">
    <skipped/>
  </testcase> <!-- SRCHG7AddnewEmptyFields -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7Upload" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7Upload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7UploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7UploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7UploadEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7UploadEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7UploadInvalidFormat" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7UploadInvalidFormat -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7UploadwithOutFile" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7UploadwithOutFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7DwonGR" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7DwonGR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ChargeDetailsAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- ChargeDetailsAddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ChargeDetailsEdit" time="0.000">
    <skipped/>
  </testcase> <!-- ChargeDetailsEdit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7ViewUpload" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7ViewUpload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7ViewUploadWF" time="0.001">
    <skipped/>
  </testcase> <!-- SRCHG7ViewUploadWF -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7ViewDoc" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7ViewDoc -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7ViewDocument" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7ViewDocument -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRCHG7View2Document" time="0.000">
    <skipped/>
  </testcase> <!-- SRCHG7View2Document -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewGurantee" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewGurantee -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadExistingRegistor" time="0.001">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistor -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadExistingRegistorInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorInvalidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewGuraTwoMan" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewGuraTwoMan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadExistingRegistorDupliacteData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorDupliacteData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddGuraNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddGuraNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadExistingRegistorWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorWithoutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewLoan" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewLoan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewLoanTwoMan" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewLoanTwoMan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadExistingRegistorInvalidFileFormat" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorInvalidFileFormat -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadExistingRegistorWithoutSelectingFile" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorWithoutSelectingFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddLoanNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddLoanNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewSecurity" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewSecurity -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadOldRegistorWithValidFile" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadOldRegistorWithValidFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadOldRegistorWithInValidFile" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadOldRegistorWithInValidFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddNewSecuTwoMan" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddNewSecuTwoMan -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2AddSecuNewEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2AddSecuNewEmpty -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadOldRegistorWithDuplicateData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadOldRegistorWithDuplicateData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2Upload" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2Upload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadOldRegistorWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadOldRegistorWithoutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadOldRegistorInvalidFile" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadOldRegistorInvalidFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2UploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2UploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2UploadWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2UploadWithoutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickUploadOldRegistorWithoutSelectFile" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadOldRegistorWithoutSelectFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickGenerateRegistor" time="0.000">
    <skipped/>
  </testcase> <!-- ClickGenerateRegistor -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2UploadInvalidformate" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2UploadInvalidformate -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickDownloadExisitingRegisterOfMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickDownloadExisitingRegisterOfMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2GR" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2GR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickDownloadOldRegisterOfMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickDownloadOldRegisterOfMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickDownloadAllRegisterOfMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickDownloadAllRegisterOfMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP2Edit" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP2Edit -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickViewExisitingRegisterOfMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickViewExisitingRegisterOfMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickViewOldRegisterOfMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickViewOldRegisterOfMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="ClickViewAllRegisterOfMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickViewAllRegisterOfMBP4 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2UploadActionTab" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2UploadActionTab -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2UploadwithoutFileActionTab" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2UploadwithoutFileActionTab -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTROD" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTROD -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2DocActionTab" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2DocActionTab -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODwithValidData" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODwithValidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2DocDwonActionTab" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2DocDwonActionTab -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODwithInValidData" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODwithInValidData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB2DocViewActionTab" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB2DocViewActionTab -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODwithDuplicateData" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODwithDuplicateData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP3" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP3 -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODwithoutData" time="0.001">
    <skipped/>
  </testcase> <!-- clickPASTRODwithoutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP3AddNew" time="0.001">
    <skipped/>
  </testcase> <!-- SRMBP3AddNew -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODInvalidFile" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODInvalidFile -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODGenerateRegistor" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODGenerateRegistor -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODGenerateRegistorDownload" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODGenerateRegistorDownload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="clickPASTRODGenerateRegistorview" time="0.000">
    <skipped/>
  </testcase> <!-- clickPASTRODGenerateRegistorview -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB3Upload" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB3Upload -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB3UploadInvalid" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB3UploadInvalid -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB3UploadWithOutData" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB3UploadWithOutData -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB3UploadInvalidFormate" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB3UploadInvalidFormate -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMB3DwonGR" time="0.000">
    <skipped/>
  </testcase> <!-- SRMB3DwonGR -->
  <system-out/>
  <testcase classname="secretrialTestCase.EntittyTest" name="SRMBP3Edit" time="0.000">
    <skipped/>
  </testcase> <!-- SRMBP3Edit -->
  <system-out/>
</testsuite> <!-- secretrialTestCase.EntittyTest -->
