<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="TRPL-PUN-0115" failures="0" tests="182" name="CompanySecretoryTest.EntityTestCases" time="0.013" errors="1" timestamp="2024-12-03T13:46:09 IST" skipped="181">
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="Login" time="0.001">
    <error message="E:\Secretarial-Project-26JULY23\Secretarial-Project-26JULY23\TestData\SecreterialSheet3.xlsx (The system cannot find the path specified)" type="java.io.FileNotFoundException">
      <![CDATA[java.io.FileNotFoundException: E:\Secretarial-Project-26JULY23\Secretarial-Project-26JULY23\TestData\SecreterialSheet3.xlsx (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:159)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
at CompanySecretoryTest.EntityTestCases.ReadExcel(EntityTestCases.java:40)
at CompanySecretoryTest.EntityTestCases.Login(EntityTestCases.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- Login -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BACloseBtn" time="0.001">
    <skipped/>
  </testcase> <!-- BACloseBtn -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EntityType" time="0.000">
    <skipped/>
  </testcase> <!-- EntityType -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="TwoMandatoryFields" time="0.000">
    <skipped/>
  </testcase> <!-- TwoMandatoryFields -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringField" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringField -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtn" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtn -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddEntity" time="0.000">
    <skipped/>
  </testcase> <!-- AddEntity -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvalidData -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditIcon" time="0.000">
    <skipped/>
  </testcase> <!-- EditIcon -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidEditIcon" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidEditIcon -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditCloseBtn" time="0.001">
    <skipped/>
  </testcase> <!-- EditCloseBtn -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BuisnessActivity" time="0.000">
    <skipped/>
  </testcase> <!-- BuisnessActivity -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddBuisnessActivity" time="0.000">
    <skipped/>
  </testcase> <!-- AddBuisnessActivity -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="NoDataFound" time="0.000">
    <skipped/>
  </testcase> <!-- NoDataFound -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithOutEnterData" time="0.000">
    <skipped/>
  </testcase> <!-- WithOutEnterData -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditBA" time="0.000">
    <skipped/>
  </testcase> <!-- EditBA -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BADeleteIcon" time="0.000">
    <skipped/>
  </testcase> <!-- BADeleteIcon -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DocumentTab" time="0.000">
    <skipped/>
  </testcase> <!-- DocumentTab -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddDocument" time="0.000">
    <skipped/>
  </testcase> <!-- AddDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AlreadyExistDocument" time="0.000">
    <skipped/>
  </testcase> <!-- AlreadyExistDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringDoc" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringDoc -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DownloadDocument" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteDocument" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddAOA" time="0.000">
    <skipped/>
  </testcase> <!-- AddAOA -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ExistingAOADocument" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingAOADocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnterignAOADocument" time="0.001">
    <skipped/>
  </testcase> <!-- WithoutEnterignAOADocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DownloadAOADocument" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadAOADocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteAOADocument" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteAOADocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddCOI" time="0.000">
    <skipped/>
  </testcase> <!-- AddCOI -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ExistingCOIDocument" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingCOIDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnterignCOIDocument" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnterignCOIDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddPolicyDoc" time="0.003">
    <skipped/>
  </testcase> <!-- AddPolicyDoc -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ExistingPolicyDoc" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingPolicyDoc -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnterignPolicyDocument" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnterignPolicyDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddLicenseRegistration" time="0.000">
    <skipped/>
  </testcase> <!-- AddLicenseRegistration -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringLicenseRegistrationDocument" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringLicenseRegistrationDocument -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddExistingLicenseRegistration" time="0.000">
    <skipped/>
  </testcase> <!-- AddExistingLicenseRegistration -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddAnnualReport" time="0.001">
    <skipped/>
  </testcase> <!-- AddAnnualReport -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddExistingDataAnnualReport" time="0.002">
    <skipped/>
  </testcase> <!-- AddExistingDataAnnualReport -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutUploadFileAnnualReport" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutUploadFileAnnualReport -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- BranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- AddBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvaliddBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- InvaliddBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="TwoMandatoryFieldsBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- TwoMandatoryFieldsBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringDataBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringDataBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- EditBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UploadDocBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- UploadDocBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidUploadDocBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidUploadDocBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="MultipleFileUploadDocBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- MultipleFileUploadDocBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutUploadDocBranchDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutUploadDocBranchDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BankDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- BankDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddBankDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- AddBankDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DuplicateBankDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- DuplicateBankDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidAccountNo" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidAccountNo -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidBankName" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidBankName -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidIFSC" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidIFSC -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteBankDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteBankDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteBankDetailes1" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteBankDetailes1 -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="LimitedLiabilityPartnership" time="0.000">
    <skipped/>
  </testcase> <!-- LimitedLiabilityPartnership -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- BranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- AddBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvaliddBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- InvaliddBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringDataBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringDataBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="TwoMandatoryFieldsBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- TwoMandatoryFieldsBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- EditBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UploadDocBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- UploadDocBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidUploadDocBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidUploadDocBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="MultipleFileUploadDocBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- MultipleFileUploadDocBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidMultipleFileUploadDocBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidMultipleFileUploadDocBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutUploadDocBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutUploadDocBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBranchDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBranchDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="BankDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- BankDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddBankDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- AddBankDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DuplicateBankDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- DuplicateBankDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidAccountNoLLP" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidAccountNoLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidBankNameLLP" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidBankNameLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidIFSCLLP" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidIFSCLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DateBankDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- DateBankDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnterBankDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnterBankDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteBankDetailesLLP" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteBankDetailesLLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteBankDetailes1LLP" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteBankDetailes1LLP -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ValidDataEntityExcelUpload" time="0.000">
    <skipped/>
  </testcase> <!-- ValidDataEntityExcelUpload -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidDataEntityExcelUpload" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidDataEntityExcelUpload -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ExistingDataEntityExcelUpload" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingDataEntityExcelUpload -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringDataEntityExcelUpload" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringDataEntityExcelUpload -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvalidEntityExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvalidEntityExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutselectingfileEntityExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutselectingfileEntityExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="LLPExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- LLPExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidDataLLPExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidDataLLPExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterExistingDataInvalidDataLLPExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- EnterExistingDataInvalidDataLLPExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringDataLLPExcelUpload" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringDataLLPExcelUpload -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvalidLLPExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvalidLLPExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutselectingfileLLPExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutselectingfileLLPExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="MGT7ExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- MGT7ExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="MGT7ExcelInvalidUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- MGT7ExcelInvalidUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="MGT7ExcelDiffInvalidUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- MGT7ExcelDiffInvalidUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="MGT7ExcelExistingUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- MGT7ExcelExistingUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutselectingfileMGT7ExcelUploadFile" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutselectingfileMGT7ExcelUploadFile -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickApplicabilty" time="0.000">
    <skipped/>
  </testcase> <!-- ClickApplicabilty -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickAmountInINR" time="0.000">
    <skipped/>
  </testcase> <!-- ClickAmountInINR -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="YesRadioBtnApplicability" time="0.000">
    <skipped/>
  </testcase> <!-- YesRadioBtnApplicability -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="NoRadioBtnApplicability" time="0.000">
    <skipped/>
  </testcase> <!-- NoRadioBtnApplicability -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseApplicability" time="0.000">
    <skipped/>
  </testcase> <!-- CloseApplicability -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickShareHoldingOption" time="0.000">
    <skipped/>
  </testcase> <!-- ClickShareHoldingOption -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- AddShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickShareHoldingDeatils" time="0.000">
    <skipped/>
  </testcase> <!-- ClickShareHoldingDeatils -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddShareHoldingDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- AddShareHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvaliddataFoliooftransferor" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvaliddataFoliooftransferor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnterDataInSahreHoldingDetailes" time="0.001">
    <skipped/>
  </testcase> <!-- WithoutEnterDataInSahreHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtnSahreHoldingDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtnSahreHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UploadFileShareHoldingDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- UploadFileShareHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UploadExistingFileShareHoldingDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- UploadExistingFileShareHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidDataUploadFileShareHoldingDeatils" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidDataUploadFileShareHoldingDeatils -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EmptyDataUploadshareHoldingDeatils" time="0.000">
    <skipped/>
  </testcase> <!-- EmptyDataUploadshareHoldingDeatils -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidFileUploadShareHoldingDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidFileUploadShareHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutSelectingFileUploadShareHoldingDetailes" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutSelectingFileUploadShareHoldingDetailes -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UploadFileSahreHolding" time="0.000">
    <skipped/>
  </testcase> <!-- UploadFileSahreHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ExistingUploadFileSahreHolding" time="0.000">
    <skipped/>
  </testcase> <!-- ExistingUploadFileSahreHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidUploadShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidUploadShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EmptyFileUploadShareHolding" time="0.001">
    <skipped/>
  </testcase> <!-- EmptyFileUploadShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidFileUploadShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidFileUploadShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutSelectingFileUploadShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutSelectingFileUploadShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickShareHoldingPattern" time="0.000">
    <skipped/>
  </testcase> <!-- ClickShareHoldingPattern -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- AddCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UploadShareholdingCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- UploadShareholdingCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvalidDataUploadShareholdingCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvalidDataUploadShareholdingCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvalidDateUploadShareholdingCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvalidDateUploadShareholdingCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterEmptyDataUploadShareholdingCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- EnterEmptyDataUploadShareholdingCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="InvalidUploadFileShareholdingCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- InvalidUploadFileShareholdingCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutUploadFileShareholdingCategoryMaster" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutUploadFileShareholdingCategoryMaster -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickShareHoldingHistorical" time="0.001">
    <skipped/>
  </testcase> <!-- ClickShareHoldingHistorical -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterInvalidDateShareHoldingHistorical" time="0.000">
    <skipped/>
  </testcase> <!-- EnterInvalidDateShareHoldingHistorical -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClearButtonShareHoldingHistorical" time="0.000">
    <skipped/>
  </testcase> <!-- ClearButtonShareHoldingHistorical -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ViewButtonShareHoldingHistorical" time="0.000">
    <skipped/>
  </testcase> <!-- ViewButtonShareHoldingHistorical -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DownloadButtonShareHoldingHistorical" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadButtonShareHoldingHistorical -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditBtnShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- EditBtnShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UpdateShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- UpdateShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtnShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtnShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteNoIconShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteNoIconShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DeleteYesShareHolding" time="0.000">
    <skipped/>
  </testcase> <!-- DeleteYesShareHolding -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickShareCertificateBtn" time="0.000">
    <skipped/>
  </testcase> <!-- ClickShareCertificateBtn -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="WithoutEnteringDataShareCertificate" time="0.000">
    <skipped/>
  </testcase> <!-- WithoutEnteringDataShareCertificate -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddShareCertificate" time="0.000">
    <skipped/>
  </testcase> <!-- AddShareCertificate -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ViewShareCertificate" time="0.000">
    <skipped/>
  </testcase> <!-- ViewShareCertificate -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="DownloadShareCertificate" time="0.000">
    <skipped/>
  </testcase> <!-- DownloadShareCertificate -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ManagementpersonnelExportToPDF" time="0.000">
    <skipped/>
  </testcase> <!-- ManagementpersonnelExportToPDF -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickCommitte" time="0.000">
    <skipped/>
  </testcase> <!-- ClickCommitte -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickCloseBtnOfCommitte" time="0.000">
    <skipped/>
  </testcase> <!-- ClickCloseBtnOfCommitte -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickCommitteeMatrix" time="0.000">
    <skipped/>
  </testcase> <!-- ClickCommitteeMatrix -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- ClickAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- AddStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterTwoMandatoryFiledStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- EnterTwoMandatoryFiledStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EmptyFiledStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- EmptyFiledStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtnStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtnStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UpdateEnterEmptyFieldsStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- UpdateEnterEmptyFieldsStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtnUpdateStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtnUpdateStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="UpdateStatutoryAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- UpdateStatutoryAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="Resignationofauditor" time="0.000">
    <skipped/>
  </testcase> <!-- Resignationofauditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtnResignationofAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtnResignationofAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickInternalAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- ClickInternalAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="AddInternalAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- AddInternalAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EnterExistingDataInternalAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- EnterExistingDataInternalAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CloseBtnInternalAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- CloseBtnInternalAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="EditInternalAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- EditInternalAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ResignationofInternalAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofInternalAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="SecretarialAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- SecretarialAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="SAAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- SAAddNew -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="SAAddNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- SAAddNewClose -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="SAClearFilter" time="0.000">
    <skipped/>
  </testcase> <!-- SAClearFilter -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="SAEditClose" time="0.000">
    <skipped/>
  </testcase> <!-- SAEditClose -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ResignationofAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ResignationofAuditorClose" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditorClose -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CostAuditor" time="0.000">
    <skipped/>
  </testcase> <!-- CostAuditor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CostAuditorAddNew" time="0.000">
    <skipped/>
  </testcase> <!-- CostAuditorAddNew -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CAAddNewClose" time="0.000">
    <skipped/>
  </testcase> <!-- CAAddNewClose -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="CAEditClose" time="0.000">
    <skipped/>
  </testcase> <!-- CAEditClose -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ResignationofAuditorCA" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditorCA -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ResignationofAuditorCloseCA" time="0.000">
    <skipped/>
  </testcase> <!-- ResignationofAuditorCloseCA -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickMBP4" time="0.000">
    <skipped/>
  </testcase> <!-- ClickMBP4 -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickUploadExistingRegistor" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistor -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickUploadExistingRegistorInvalidData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorInvalidData -->
  <system-out/>
  <testcase classname="CompanySecretoryTest.EntityTestCases" name="ClickUploadExistingRegistorWithoutData" time="0.000">
    <skipped/>
  </testcase> <!-- ClickUploadExistingRegistorWithoutData -->
  <system-out/>
</testsuite> <!-- CompanySecretoryTest.EntityTestCases -->
